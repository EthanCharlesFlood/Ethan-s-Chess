exit
c
exit
forward_steps
self.color
self.pos
self
self.board[[1,0]].class
self.board[[1,0]]
g.board[[1,0]]
self.pos
self.class
self
c
display forward_steps
display side_attacks
d side_attacks
side_attacks
c
side_attacks
forward_steps
c
side_attacks
forward_steps
exit
c
y
x
fmoves
c
exit
c
exit
self.pieces[17].class
self.pieces[0].class
self.pieces.length
self.pieces
copy
exit
c
exit
c
exit
c
exit
@board.valid_pos?(pos)
@board
pos
c
!@board.valid_pos?(pos)
exit
@board[pos].empty?
@board.valid_pos?(pos)
c
pos
exit
c
pos
c
pos
c
exit
move_dirs
direction[0]
self.pos[0]
c
disp potential_move
c
disp moves
disp grow_unblocked_moves_in_dir(direction[0], direction[1])
c
exit
disp board[potential_move]
c
disp unblocked_moves
disp potential_move
c
board[potential_move]
potential_move
c
disp self.color
disp board[potential_move].color
c
self.color
board[potential_move].color
board[potential_move]
exit
disp grow_unblocked_moves_in_dir(direction[0], direction[1])
disp moves
q
exit
c
disp moves
c
disp unblocked_moves
q
c
disp unblocked_moves
disp potential_move
disp self.pos
n
self.pos
self.class
self
dy
dx
exit
c
@grid[row].class
@grid[row]
pos
col
row
exit
b.move_piece([1,7],[2,7])
c
@grid[3][1]
@grid[start_pos]
@grid
start_pos
piece
